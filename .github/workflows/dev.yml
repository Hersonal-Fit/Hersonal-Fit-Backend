name: Node.js CI

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Server 1
        continue-on-error: true
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY_SERVER }}
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST_SERVER }}
          DEPLOY_USER: ${{ secrets.DEPLOY_USER_SERVER }}
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH_SERVER }}
        run: |
          echo "export SSH_PRIVATE_KEY_SERVER1=${{ secrets.SSH_PRIVATE_KEY_SERVER }}" >> env_vars.sh
          echo "export DEPLOY_HOST_SERVER1=${{ secrets.DEPLOY_HOST_SERVER }}" >> env_vars.sh
          echo "export DEPLOY_USER_SERVER1=${{ secrets.DEPLOY_USER_SERVER }}" >> env_vars.sh
          echo "export DEPLOY_PATH_SERVER1=${{ secrets.DEPLOY_PATH_SERVER }}" >> env_vars.sh
          # ... 나머지 환경 변수 추가
          chmod +x env_vars.sh
          # 배포 스크립트 실행
          echo "$SSH_PRIVATE_KEY" | base64 -d > private_key.pem
          chmod 600 private_key.pem
          rsync -avz -e 'ssh -i private_key.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null' --exclude=node_modules --exclude=.git ./ env_vars.sh $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH
          ssh -i private_key.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $DEPLOY_USER@$DEPLOY_HOST "cd $DEPLOY_PATH && source env_vars.sh && rm env_vars.sh && git checkout dev && git pull && git fetch && npm install && pm2 restart 0"
          rm -f private_key.pem env_vars.sh
